generator client {
    provider = "prisma-client-js"
    output   = "./client"
}

datasource db {
    provider = "postgresql"
    url      = env("TWITCH_BOT_DATABASE_URL")
}

model Channel {
    id       String   @id @default(dbgenerated("gen_random_uuid()")) @map("channel_id") @db.Uuid
    name     String   @unique @map("channel_name")
    password String   @map("password") @db.Char(60)
    enabled  Boolean  @default(true) @map("enabled")
    configs  Config[]

    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

    @@map("channels")
}

model Config {
    channel   Channel    @relation(fields: [channelId], references: [id], onUpdate: Cascade, onDelete: Cascade)
    channelId String     @map("channel_id") @db.Uuid
    type      ConfigType @map("type")
    value     String     @map("value")

    @@unique([channelId, type])
    @@map("channels_configs")
}

model ChatQueue {
    id        String        @id @default(dbgenerated("gen_random_uuid()")) @map("message_id") @db.Uuid
    channel   String        @map("channel_name")
    value     String        @map("message")
    response  String?       @map("response")
    userstate Json          @map("context")
    status    MessageStatus @map("status")

    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

    @@map("chat_queue")
}

model ChatHistoryMessage {
    id       String   @id @default(dbgenerated("gen_random_uuid()")) @map("message_id") @db.Uuid
    channel  String   @map("channel_name")
    username String   @map("username")
    role     ChatRole @map("role")
    value    String   @map("value")

    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

    @@map("chat_history")
}

enum ConfigType {
    OPEN_AI_API_KEY
    STREAM_DJ_CHANNEL_ID
    STREAM_DJ_LINK
}

enum ChatRole {
    system
    user
    assistant
}

enum MessageStatus {
    QUEUED
    IN_PROGRESS
    FINISHED
}
